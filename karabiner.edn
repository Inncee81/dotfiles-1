;; https://github.com/yqrashawn/GokuRakuJoudo
;; edn spec https://github.com/edn-format/edn
;; easy config for karabiner
;; commands:
;; - goku will update karabiner.json once
;; - gokuw will watch for changes in this file and update
;; - `brew services start goku` will restart this at login

;; TODO: keep track of common use cases, esp if they are switched across apps, like git status or git diff...

;; GOTCHAS:
;; - FAILS :Sleft_arrow
;; - WORKS :!Sleft_arrow (maybe for multiples you have to define whether optional or not)

;; [:a :1 :chrome] -- [<from> <to> <conditions>]

;; Note: For any key mapping, DO NOT use the current colemak key. Use the old key...

;; define application identifiers
{

 ;; This causes all caps bug?!?
:profiles
;;  {:goku {:default true
;; TODO mark these so it's harder for o mde instead f typing it nrmally
 {:Default {:default true
         :alone   90 ; hold for .. ms to register single tap
         :held    50 ; TODO: not sure what it's for
         :delay   20 ; time after which the key press is delayed
         :sim_delay     10  ; ?
         :sim     10 }} ; keys need to be pressed within this threshold to be considered simultaneous
 :applications {:chrome ["^com\\.google\\.Chrome$"]
                :screenflow["^net\\.telestream\\.screenflow9$"]}

;;  :templates {:launch "osascript -e 'tell application \"Alfred 4\" to run trigger \"launch%s\" in workflow \"yqrashawn.workflow.launcher\" with argument \"%s\"'"}
;;  :templates {:launch "echo testing: %s "}
:templates {:alfred "osascript -e 'tell application \"Alfred 4\" to run trigger \"%s\" in workflow \"%s\" with argument \"%s\"'"
             :km "osascript -e 'tell application \"Keyboard Maestro Engine\" to do script \"%s\"'"
             :open "open \"%s\""
             }


;;  :simlayers {:period-mode {:key :period}}
;;  :simlayers {:open-mode {:key :o}}
;;  :simlayers {:o-mode {:key :o}}

;;  :layers {
        ; implement caps lock mode

    ;; :o-mode{:key :semicolon :alone {:key :semicolon}}} ; o-ke
 ;; TODO: strongly consider mapping all the colemak mappings here so we can map those instead of the original keys (annoying)

;; global rules for all apps
;; How do we get both?!?
 :main [

        ;; {:des "Colemak remappings so we can map anything in this file using the colemak results instead of the original key (confusing)"
        ;;  :rules [
        ;;          [:##e :f] [:##r :p] [:##t :g] [:##y :j] [:##u :l] [:##i :u] [:##o :y] [:##p :semicolon] ;[:Sp :colon]
        ;;          [:##s :r] [:##d :s] [:##f :t] [:##g :d] [:##j :n] [:##k :e] [:##l  :i] [:##semicolon :o]
        ;;          [:##n :k] ]
        ;;  }

        {:des "Change right_command+hjkl to arrow keys"
             :rules [ ;; map to alt instead of right command
                     [:!O##h :left_arrow]
                     ;; [:!O##i :left_arrow]
                     [:!O##l :right_arrow]
                     ;; add opt to use u/d for l/r
                     [:!SO##j :left_arrow]
                     [:!SO##k :right_arrow]
                     [:!O##j :down_arrow]
                     [:!O##k :up_arrow]]}
                     ;; [:!Q##h :left_arrow]
                     ;; [:!Q##l :right_arrow]
                     ;; ;; add opt to use u/d for l/r
                     ;; [:!QO##j :left_arrow]
                     ;; [:!QO##k :right_arrow]
                     ;; [:!Q##j :down_arrow]
                     ;; [:!Q##k :up_arrow]]}



        {:des "Caps_lock to delete_or_backspace" :rules [ [:##caps_lock :delete_or_backspace] ]}

        {:des "< | Rewind/Forward Screenflow scrubber 1 second" :rules [ [:!Scomma :!Sleft_arrow :screenflow],
                                                                             [:!Speriod :!Sright_arrow :screenflow] ]}

        {:des "< | Rewind/Forward Screenflow scrubber 1 second" :rules [ [:!Scomma :!Sleft_arrow :screenflow],
                                                                             [:!Speriod :!Sright_arrow :screenflow] ]}



   ;; template to launch apps
   ;; {:templates {:launch "osascript -e 'tell application \"Alfred 3\" to run trigger \"launch%s\" in workflow \"yqrashawn.workflow.launcher\" with argument \"%s\"'"}


{:des "okey (alfred)"
         :rules [:o-mode
                 [:1 :!C1]
                 [:2 :!C2]
                 [:3 :!C3]
                 ;; TODO: fix this to use the template
                 [:d ["open ~/Applications/Chrome\\ Apps.localized/Roam\\ Research.app/"]]
                 ;; [:r [:open "~/Applications/Chrome\\ Apps.localized/Roam\\ Research.app/"]]
                 [:5 :!C5]
                 [:6 :!C6]
                 [:q [:alfred "search downloads" "recentdownloads.ddjfreedom"]]]}
;;

        ;; {:des "open mode"
        ;;      :rules [:open-mode
        ;;              [:a [:launch "Alacritty"]]
        ;;              [:c [:launch "Chrome"]]
        ;;      ]}

        ;; {:des "launcher mode"
        ;;      :rules [[:j [:launch "Alacritty"] :launch-mode]
        ;;              [:k [:launch "Emacs"] :launch-mode]
        ;;              [:l [:launch "Chrome"] :launch-mode]
        ;;              [:m [:launch "Mail"] :launch-mode]
        ;;              [:v [:launch "WeChat"] :launch-mode]
        ;;              [:q [:launch "KE"] :launch-mode]
        ;;              [:f [:launch "Finder"] :launch-mode]
        ;;              [:9 [:launch "PDFExpert"] :launch-mode]
        ;;              [:comma [:launch "Safari"] :launch-mode]
        ;;              [:period [:launch "Paw"] :launch-mode]
        ;;              [:equal_sign [:launch "Textual"] :launch-mode]
        ;;              [:8 [:launch "KEEvents"] :launch-mode]
        ;;              [:b [:launch "BearyChat"] :launch-mode]
        ;;              [:t [:launch "TG"] :launch-mode]]}
   ;;


 ]}


;; Important lessons learned
;; ORDER matters. specific should go before generic (like with route matching
;; mappings are to the actual KEY, so :##e :f means that modifiers like shift work as usual and you don't need to map both the o and O. AWESOME.
;; goku seems to NOT remove mappings if they've just been commented out... Maybe a diff issue? Can I just delete the json file and do it again?
;; or maybe it's just change detection... add some more additive changes than just commenting something out...

;; cheatsheet:
;; ## prefix will mean "+ any key"
;; Q - right command
;; O - option




;; TODO install: https://github.com/venantius/vim-cljfmt
